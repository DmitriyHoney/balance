{"version":3,"sources":["assets/images/default-user.jpg","utils/hoc.js","components/Users/UsersList/UsersList.module.scss","components/common/SmallAvatar/SmallAvatar.module.scss","components/common/SearchBlock/SearchBlock.module.scss","components/common/SearchByFilter/SearchByFilter.module.scss","components/common/SmallAvatar/SmallAvatar.js","components/Users/UsersList/UsersList.js","components/common/PaginationWrap/PaginationWrap.js","components/common/SearchBlock/SearchBlock.js","components/common/SearchByFilter/SearchByFilter.js","components/Users/Users.js","components/Users/UsersContainer.js"],"names":["module","exports","withAuthRedirect","Component","WithRedirect","this","props","isAuth","to","React","connect","state","authPage","SmallAvatar","userUrl","id","className","s","avatarWrap","src","defaultUser","alt","UsersList","toggleFollowUser","userId","followed","userList","users","map","oneUser","name","photos","status","key","user","small","disabled","usersInProcessOfSubscribing","some","e","onClick","PaginationWrap","useState","activePage","setActivePage","useEffect","totalItemsCount","itemsCountPerPage","pageRangeDisplayed","onChange","newPageNumber","handlePaginationBtnClick","itemClass","linkClass","SearchBlock","section","type","placeholder","value","onClickReset","SearchInputFilter","htmlFor","checked","SearchByFilter","handleRadio","filterParam","target","setAnotherPageAC","setFriendFilterAC","friend","Users","usersPage","term","setTermValueAC","getUsersList","page","totalCount","count","goToAnotherPage","usersPagePreloader","Preloader","items","UsersContainer","getUsersListThunkCallback","goToAnotherPageThunkCallback","toggleFollowUserThunkCallback","prevProps","prevState","setDefaultSettingsAC","usersPagePreloder","compose","getUsersPage","getFriendFilter"],"mappings":"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","file":"static/js/5.2af70583.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-user.8931c0d8.jpg\";","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport const withAuthRedirect = Component => {\r\n    let mapStateToProps = state => ({\r\n        isAuth: state.authPage.isAuth\r\n    });\r\n\r\n    class WithRedirect extends React.Component {\r\n        render() {\r\n            if(this.props.isAuth) return <Component {...this.props}/>\r\n            else return <Redirect to={\"/login\"} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps, {})(WithRedirect)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"UsersList_user__12oEn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarWrap\":\"SmallAvatar_avatarWrap__1YFtk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"SearchBlock_section__3YMZC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"SearchByFilter_section__2LaMN\"};","//Services\r\nimport React from \"react\";\r\nimport defaultUser from \"../../../assets/images/default-user.jpg\";\r\n//Styles\r\nimport s from \"./SmallAvatar.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst SmallAvatar = props => {\r\n    let userUrl = `/profile/${props.id}`\r\n    return (\r\n        <div className={s.avatarWrap}>\r\n            <NavLink to={userUrl}>\r\n                <img src={props.src || defaultUser} alt=\"Avatar-sm\"/>\r\n            </NavLink>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SmallAvatar;","//Services\r\nimport React from \"react\";\r\n//Styles\r\nimport s from \"./UsersList.module.scss\";\r\nimport SmallAvatar from \"../../common/SmallAvatar/SmallAvatar\";\r\n//Components\r\n\r\nconst UsersList = props => {\r\n\r\n    let toggleFollowUser = (userId, followed) => {\r\n        props.toggleFollowUser(userId, followed);\r\n    }\r\n\r\n\r\n    let userList = props.users.map(oneUser => {\r\n        let {name, id, photos, status, followed} = oneUser; //uniqueUrlName\r\n        return (\r\n            <div key={id} className={s.user}>\r\n                <div>\r\n                    <div>\r\n                        <SmallAvatar src={photos.small} id={id}/>\r\n                        <h3>{name}</h3>\r\n                    </div>\r\n                    <p>Status: {status || \"Not status\"}</p>\r\n                </div>\r\n                {followed\r\n                    ? <button\r\n                        disabled={props.usersInProcessOfSubscribing.some(e => e === id)}\r\n                        onClick={() => toggleFollowUser(id, followed)}>Unfollow</button>\r\n                    : <button\r\n                        disabled={props.usersInProcessOfSubscribing.some(e => e === id)}\r\n                        onClick={() => toggleFollowUser(id, followed)}>Follow</button>\r\n                }\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            {userList}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n/*\r\n    name: \"vitaliidrapaliuk\",\r\n    id: 8697,\r\n    uniqueUrlName: null,\r\n    photos: {\r\n        small: null,\r\n        large: null\r\n    },\r\n    status: null,\r\n    followed: false\r\n*/\r\nexport default UsersList;","import React, {useEffect, useState} from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst PaginationWrap = props => {\r\n\r\n    const [activePage, setActivePage] = useState(props.activePage);\r\n\r\n    useEffect(() => {\r\n        setActivePage(props.activePage);\r\n    }, [props.activePage]);\r\n\r\n    let handleClickOnPagination = newPageNumber => {\r\n        setActivePage(newPageNumber);\r\n        props.handlePaginationBtnClick(newPageNumber)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Pagination\r\n                {...props}\r\n                totalItemsCount={props.totalItemsCount}\r\n                itemsCountPerPage={props.itemsCountPerPage}\r\n                pageRangeDisplayed={props.pageRangeDisplayed}\r\n\r\n                onChange={handleClickOnPagination}\r\n                activePage={activePage}\r\n                itemClass=\"page-item\"\r\n                linkClass=\"page-link\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaginationWrap;","//Services\r\nimport React from \"react\";\r\n//Styles\r\nimport s from \"./SearchBlock.module.scss\";\r\n//Components\r\n\r\nconst SearchBlock = props => {\r\n    return (\r\n        <div className={s.section}>\r\n            <input type=\"text\" placeholder={\"Search...\"} value={props.value} onChange={props.onChange}/>\r\n            <button onClick={props.onClick}>Search</button>\r\n            <button onClick={props.onClickReset}>Reset</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBlock;","//Services\r\nimport React from \"react\";\r\n//Styles\r\nimport s from \"./SearchByFilter.module.scss\"\r\n//Components\r\n\r\nconst SearchByFilter = props => {\r\n    let handleRadio = (e) => {\r\n        let filterParam = \"\";\r\n        switch (e.target.name) {\r\n            case \"allUsers\":\r\n                filterParam = \"\"\r\n                break;\r\n            case \"onlyFriend\":\r\n                filterParam = true\r\n                break;\r\n            case \"notFriend\":\r\n                filterParam = false\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        props.setAnotherPageAC(1);\r\n        props.setFriendFilterAC(filterParam)\r\n    };\r\n    return (\r\n        <div className={s.section}>\r\n            <SearchInputFilter\r\n                value={\"all Users\"}\r\n                name={\"allUsers\"}\r\n                checked={props.friend === \"\"}\r\n                onChange={handleRadio}\r\n            />\r\n            <SearchInputFilter\r\n                value={\"only Friend\"}\r\n                name={\"onlyFriend\"}\r\n                checked={props.friend === true}\r\n                onChange={handleRadio}\r\n            />\r\n            <SearchInputFilter\r\n                value={\"not Friend\"}\r\n                name={\"notFriend\"}\r\n                checked={props.friend === false}\r\n                onChange={handleRadio}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst SearchInputFilter = props => {\r\n    return(\r\n        <div>\r\n            <label htmlFor={props.name}>{props.value}</label>\r\n            <input\r\n                type=\"radio\"\r\n                name={props.name}\r\n                id={props.name}\r\n                checked={props.checked}\r\n                onChange={props.onChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchByFilter;","//Services\r\nimport React from \"react\";\r\n//Styles\r\n//import s from \"./Users.module.scss\";\r\n//Components\r\nimport UsersList from \"./UsersList/UsersList\";\r\nimport PaginationWrap from \"../common/PaginationWrap/PaginationWrap\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport SearchBlock from \"../common/SearchBlock/SearchBlock\";\r\nimport SearchByFilter from \"../common/SearchByFilter/SearchByFilter\";\r\n\r\n\r\nconst Users = props => {\r\n    let handlePaginationBtn = newPageNumber => {\r\n        props.goToAnotherPage(newPageNumber);\r\n    }\r\n\r\n    //For SearchBlock\r\n    let handleSearchBtn = () => {\r\n        props.setAnotherPageAC(1);\r\n        props.getUsersList();\r\n    };\r\n    let handleSearchInput = (e) => {\r\n        props.setTermValueAC(e.target.value)\r\n    };\r\n    let handleResetSearch = () => {\r\n        props.setTermValueAC(\"\");\r\n        props.getUsersList();\r\n    };\r\n    //End For SearchBlock\r\n\r\n    return (\r\n        <div>\r\n            <SearchBlock\r\n                value={props.usersPage.term}\r\n                onChange={handleSearchInput}\r\n                onClick={handleSearchBtn}\r\n                onClickReset={handleResetSearch}\r\n            />\r\n            <SearchByFilter\r\n                setAnotherPageAC={props.setAnotherPageAC}\r\n                friend={props.friend}\r\n                setFriendFilterAC={props.setFriendFilterAC}\r\n            />\r\n            <PaginationWrap\r\n                activePage={props.usersPage.page} //Текущая страница\r\n                totalItemsCount={props.usersPage.totalCount} //Всего пользователей\r\n                itemsCountPerPage={props.usersPage.count} //Пользователей на странице\r\n                pageRangeDisplayed={15} //Сколько кнопок показывать за раз\r\n                handlePaginationBtnClick={handlePaginationBtn} //Что делаем по нажатию на кнопку\r\n            />\r\n            {props.usersPagePreloader\r\n                ? <Preloader/>\r\n                : <UsersList\r\n                    users={props.usersPage.items}\r\n                    toggleFollowUser={props.toggleFollowUser}\r\n                    usersInProcessOfSubscribing={props.usersPage.usersInProcessOfSubscribing}\r\n                />\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","//Services\r\nimport React from \"react\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getUsersListThunkCallback, goToAnotherPageThunkCallback, toggleFollowUserThunkCallback,\r\n    setTermValueAC, setFriendFilterAC, setAnotherPageAC,\r\n    setDefaultSettingsAC\r\n} from \"../../reducers/users-reducer\";\r\n//Components\r\nimport Users from \"./Users\";\r\nimport {getFriendFilter, getUsersPage, usersPagePreloader} from \"../../selectors/selectors\";\r\nimport {withAuthRedirect} from \"../../utils/hoc\";\r\n\r\nlet mapStateToProps = state => ({\r\n    usersPage:          getUsersPage(state),\r\n    usersPagePreloder:  usersPagePreloader(state),\r\n    friend:             getFriendFilter(state)\r\n});\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.getUsersList();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.friend !== this.props.friend) {\r\n            this.getUsersList();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() { //Сбрасывать настройки фильтров, поиска и текущей страницы\r\n        this.props.setDefaultSettingsAC()\r\n    }\r\n\r\n    getUsersList = () => {\r\n        this.props.getUsersListThunkCallback(); //Получает список пользователей\r\n    }\r\n\r\n    goToAnotherPage = newPageNumber => { //Переход на другую страницу\r\n        this.props.goToAnotherPageThunkCallback(newPageNumber);\r\n    }\r\n\r\n    toggleFollowUser = (userId, followed) => { //Подписаться или отписаться от пользователя\r\n        this.props.toggleFollowUserThunkCallback(userId, followed);\r\n    }\r\n\r\n    render() {\r\n        return <Users\r\n            usersPagePreloader={this.props.usersPagePreloder}\r\n            usersPage={this.props.usersPage}\r\n            goToAnotherPage={this.goToAnotherPage} //Переход на другую страницу\r\n            toggleFollowUser={this.toggleFollowUser}\r\n            setTermValueAC={this.props.setTermValueAC}\r\n            getUsersList={this.getUsersList}\r\n            setFriendFilterAC={this.props.setFriendFilterAC}\r\n            friend={this.props.friend}\r\n            setAnotherPageAC={this.props.setAnotherPageAC}\r\n        />;\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {getUsersListThunkCallback, goToAnotherPageThunkCallback, toggleFollowUserThunkCallback,\r\n        setTermValueAC, setFriendFilterAC, setAnotherPageAC,\r\n        setDefaultSettingsAC}),\r\n)(UsersContainer);"],"sourceRoot":""}