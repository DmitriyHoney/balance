{"version":3,"sources":["components/Sidebar/Sidebar.js","components/Header/Header.js","components/Header/HeaderContainer.js","App.js","serviceWorker.js","redux/redux-store.js","index.js","reducers/auth-reducer.js","selectors/selectors.js","components/common/Preloader/Preloader.js","api/api.js","reducers/profile-reducer.js","reducers/users-reducer.js","components/Sidebar/Sidebar.module.scss","assets/images/preloader.svg","components/Header/Header.module.scss"],"names":["Sidebar","props","className","s","section","to","Header","isAuth","onClick","logoutToTheSite","HeaderContainer","logoutToTheSiteThunkCallback","this","React","Component","compose","connect","state","getAuthState","ProfileContainer","lazy","UsersContainer","LoginContainer","App","getAuthRequestThunkCallback","authPreloader","Preloader","fallback","from","path","render","getAuthPreloader","Boolean","window","location","hostname","match","reducers","combineReducers","profilePage","profileReducer","authPage","authReducer","usersPage","usersReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","SET_AUTH_STATE","SET_AUTH_PRELOADER","SET_AUTH_USER_DATA","SET_USER_ID","SET_CAPTCHA_URL","SET_DEFAULT_STATE","initialState","data","id","login","email","captchaUrl","setAuthStateAC","bool","type","setAuthPreloaderAC","dispatch","a","authApi","getAuthRequest","response","resultCode","dataFromApi","loginInTheSiteThunkCallback","formData","loginInTheSite","errorArray","messages","length","stopSubmit","_error","getCaptchaUrl","url","action","userId","getProfilePageSelector","getProfilePreloaderStateSelector","profilePreloader","getUsersPage","usersPagePreloader","usersPagePreloder","getFriendFilter","friend","src","preloaderImg","alt","instance","axios","withCredentials","baseURL","headers","profileApi","getProfileUserCard","get","getUserStatus","changeUserStatus","statusString","put","status","setProfilePhoto","photoFileObj","setUserInfo","usersApi","getUsers","count","page","term","followOnUser","post","unFollowOnUser","delete","SET_PROFILE_USER","SET_PROFILE_PRELOADER","SET_USER_STATUS","SET_IS_MY_PAGE","SET_PROFILE_PHOTO","SET_NEW_USER_INFO","userStatus","isItMyPage","userData","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","fullName","photos","small","large","setProfilePreloaderAC","setUserStatusAC","userStatusFromApi","setIsMyPageAC","getProfileUserCardThunkCallback","getState","currentUserId","undefined","getUserStatusThunkCallback","userDataFromApi","changeUserStatusThunkCallback","newStatusString","setNewProfilePhotoThunkCallback","photoFile","FormData","append","setNewUserInfoThunkCallback","AboutMe","dataForFetchServer","newUserInfo","SET_USERS_DATA","SET_ANOTHER_PAGE","SET_USERS_PAGE_PRELOADER","SET_FOLLOW_ON_USER_STATE","SET_TERM_VALUE","SET_FRIEND_FILTER","SET_DEFAULT_SETTINGS","items","totalCount","usersInProcessOfSubscribing","setAnotherPageAC","newPageNumber","setUsersPagePreloaderAC","setFollowOnUserStateAC","toggleUserToStackSubscribeAC","setTermValueAC","string","setFriendFilterAC","value","setDefaultSettingsAC","getUsersListThunkCallback","goToAnotherPageThunkCallback","toggleFollowUserThunkCallback","followed","map","oneUser","filter","u","module","exports"],"mappings":"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","file":"static/js/main.e70fe7a3.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from './Sidebar.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Sidebar = props => {\r\n    return (\r\n        <div className={s.section}>\r\n            <aside>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to=\"/profile\">Profile</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/users\">Users</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </aside>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport s from './Header.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n    let handleLogoutBtn = () => {\r\n        props.logoutToTheSite()\r\n    }\r\n    return (\r\n        <div className={s.section}>\r\n            <header>\r\n                <NavLink to={\"/profile\"}>Social App</NavLink>\r\n                {props.isAuth\r\n                    && <button onClick={handleLogoutBtn}>Logout</button>\r\n                }\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutToTheSiteThunkCallback} from \"../../reducers/auth-reducer\";\r\nimport {getAuthState} from \"../../selectors/selectors\";\r\n\r\nlet mapStateToProps = state => ({\r\n    isAuth: getAuthState(state),\r\n});\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    logoutToTheSite = () => {\r\n        this.props.logoutToTheSiteThunkCallback()\r\n    }\r\n\r\n    render() {\r\n        return <Header isAuth={this.props.isAuth} logoutToTheSite={this.logoutToTheSite}/>\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {logoutToTheSiteThunkCallback})\r\n)(HeaderContainer);","//Services\nimport React, {Suspense} from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\n//Styles\nimport \"./App.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//Components\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport {getAuthRequestThunkCallback} from \"./reducers/auth-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {getAuthPreloader, getAuthState} from \"./selectors/selectors\";\n\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\")); //Ленивая загрузка\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\")); //Ленивая загрузка\nconst LoginContainer = React.lazy(() => import(\"./components/Login/LoginContainer\")); //Ленивая загрузка\n\n\nlet mapStateToProps = state => ({\n    authPreloader: getAuthPreloader(state),\n    isAuth: getAuthState(state),\n});\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.getAuthRequestThunkCallback()\n    }\n\n    render() {\n        if (this.props.authPreloader) return <Preloader/>\n        return (\n            <div className=\"App\">\n                <HeaderContainer />\n                <Sidebar/>\n                <div className=\"content\">\n                    <Suspense fallback={<div>Загрузка...</div>}>\n                        <Redirect from={\"/\"} to={\"/profile\"} />\n                        <Route path={\"/profile/:userId?\"} render={() => <ProfileContainer/>}/>\n                        <Route path={\"/users\"} render={() => <UsersContainer/>}/>\n                        <Route path={\"/login\"} render={() => <LoginContainer/>}/>\n                    </Suspense>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {getAuthRequestThunkCallback})\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport profileReducer from \"../reducers/profile-reducer\";\r\nimport authReducer from \"../reducers/auth-reducer\";\r\nimport usersReducer from \"../reducers/users-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    authPage: authReducer,\r\n    usersPage: usersReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, HashRouter} from \"react-router-dom\"; //HashRouter для нормального функционирования на GithubPages\nimport {Provider} from 'react-redux';\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </HashRouter>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {authApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_STATE            = 'social-app/auth-reducer/SET_AUTH_STATE';\r\nconst SET_AUTH_PRELOADER        = 'social-app/auth-reducer/SET_AUTH_PRELOADER';\r\nconst SET_AUTH_USER_DATA        = 'social-app/auth-reducer/SET_AUTH_USER_DATA';\r\nconst SET_USER_ID               = 'social-app/auth-reducer/SET_USER_ID';\r\nconst SET_CAPTCHA_URL           = 'social-app/auth-reducer/SET_CAPTCHA_URL';\r\nconst SET_DEFAULT_STATE         = 'social-app/auth-reducer/SET_DEFAULT_STATE';\r\n\r\nlet initialState = {\r\n    data: {\r\n        id: null,\r\n        login: null,\r\n        email: null\r\n    },\r\n    isAuth: false,\r\n    authPreloader: true,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_STATE:\r\n            return {\r\n                ...state,\r\n                isAuth: action.bool\r\n            }\r\n        case SET_AUTH_PRELOADER:\r\n            return {\r\n                ...state,\r\n                authPreloader: action.bool\r\n            }\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                data: action.dataFromApi\r\n            }\r\n        case SET_USER_ID:\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    id: action.userId\r\n                }\r\n            }\r\n        case SET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.url\r\n            }\r\n        case SET_DEFAULT_STATE:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//ActionCreator\r\nexport const setAuthStateAC                 = bool          => ({type: SET_AUTH_STATE, bool});\r\nexport const setAuthPreloaderAC             = bool          => ({type: SET_AUTH_PRELOADER, bool});\r\nexport const setAuthUserDataAC              = dataFromApi   => ({type: SET_AUTH_USER_DATA, dataFromApi});\r\nexport const setCaptchaUrlAC                = url           => ({type: SET_CAPTCHA_URL, url});\r\nexport const setDefaultStateAC              = ()           => ({type: SET_DEFAULT_STATE});\r\n\r\n//ThunkCallback\r\nexport const getAuthRequestThunkCallback = () => async dispatch => {\r\n    dispatch(setAuthPreloaderAC(true));\r\n    let response = await authApi.getAuthRequest();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthStateAC(true));\r\n        dispatch(setAuthUserDataAC(response.data.data))\r\n        dispatch(setAuthPreloaderAC(false));\r\n    } else if (response.data.resultCode === 1) {\r\n        dispatch(setAuthStateAC(false));\r\n        dispatch(setAuthPreloaderAC(false));\r\n    }\r\n};\r\n\r\nexport const loginInTheSiteThunkCallback = formData => async dispatch => {\r\n    let response = await authApi.loginInTheSite(formData);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthRequestThunkCallback());\r\n    } else {\r\n        let errorArray = response.data.messages.length > 0 ? response.data.messages : \"Unknown Error\"\r\n        if (response.data.resultCode === 1) {\r\n            dispatch(stopSubmit(\"login\", {_error: errorArray}))\r\n        } else if (response.data.resultCode === 10) {\r\n            let response = await authApi.getCaptchaUrl();\r\n            dispatch(setCaptchaUrlAC(response.data.url));\r\n            dispatch(stopSubmit(\"login\", {_error: errorArray}))\r\n        }\r\n\r\n\r\n    }\r\n};\r\n\r\nexport const logoutToTheSiteThunkCallback = () => async dispatch => {\r\n    let response = await authApi.logoutToTheSite();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setDefaultStateAC());\r\n        dispatch(getAuthRequestThunkCallback());\r\n    }\r\n};\r\n\r\nexport default authReducer;","//ProfilePage\r\nexport const getProfilePageSelector                 = state => state.profilePage;\r\nexport const getProfilePreloaderStateSelector       = state => state.profilePage.profilePreloader;\r\n\r\n//UsersPage\r\nexport const getUsersPage                           = state => state.usersPage;\r\nexport const usersPagePreloader                     = state => state.usersPage.usersPagePreloder;\r\nexport const getFriendFilter                        = state => state.usersPage.friend;\r\n\r\n//AuthPage\r\nexport const getAuthPreloader                       = state => state.authPage.authPreloader;\r\nexport const getAuthState                           = state => state.authPage.isAuth;\r\nexport const getCaptchaUrl                          = state => state.authPage.captchaUrl;\r\n","import React from 'react';\r\nimport preloaderImg from \"../../../assets/images/preloader.svg\";\r\n//import s from './Preloader.module.scss';\r\n\r\nconst Preloader = props => {\r\n    return (\r\n        <div>\r\n            <img src={preloaderImg} alt=\"Preloader\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;","import * as axios from \"axios\";\r\n\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '27511a9e-459f-4e9b-aa8d-12472434ae94'\r\n    }\r\n});\r\n\r\nexport const profileApi = {\r\n    getProfileUserCard(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getUserStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    changeUserStatus(statusString) {\r\n        return instance.put(`profile/status`, {status: statusString})\r\n    },\r\n    setProfilePhoto(photoFileObj) {\r\n        return instance.put(`profile/photo`, photoFileObj, {\r\n            headers: { 'content-type': 'multipart/form-data' }\r\n        })\r\n    },\r\n    setUserInfo(formData) {\r\n        return instance.put(`profile`, formData)\r\n    }\r\n};\r\n\r\nexport const usersApi = {\r\n    getUsers(count, page, term, friend) {\r\n        if (term === \"\" && friend === \"\")  return instance.get(`users?count=${count}&page=${page}&term=&friend=`)\r\n        if (term === \"\")  return instance.get(`users?count=${count}&page=${page}&term=&friend=${friend}`)\r\n        if (friend === \"\")  return instance.get(`users?count=${count}&page=${page}&term=${term}&friend=`)\r\n        return instance.get(`users?count=${count}&page=${page}&term=${term}&friend=${friend}`)\r\n    },\r\n    followOnUser(userId) {\r\n        return instance.post(`/follow/${userId}`, {userId})\r\n    },\r\n    unFollowOnUser(userId) {\r\n        return instance.delete(`/follow/${userId}`, {userId})\r\n    }\r\n};\r\n\r\nexport const authApi = {\r\n    getAuthRequest() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    loginInTheSite(formData) {\r\n        return instance.post(`auth/login`, formData)\r\n    },\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    },\r\n    logoutToTheSite() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n};","import {profileApi} from \"../api/api\";\r\n\r\nconst SET_PROFILE_USER          = \"social-app/profile-reducer/SET_PROFILE_USER\";\r\nconst SET_PROFILE_PRELOADER     = \"social-app/profile-reducer/SET_PROFILE_PRELOADER\";\r\nconst SET_USER_STATUS           = \"social-app/profile-reducer/SET_USER_STATUS\";\r\nconst SET_IS_MY_PAGE            = \"social-app/profile-reducer/SET_IS_MY_PAGE\";\r\nconst SET_PROFILE_PHOTO         = \"social-app/profile-reducer/SET_PROFILE_PHOTO\";\r\nconst SET_NEW_USER_INFO         = \"social-app/profile-reducer/SET_NEW_USER_INFO\";\r\n\r\nlet initialState = {\r\n    userStatus: null,\r\n    profilePreloader: true,\r\n    isItMyPage: null,\r\n    userData: {\r\n        aboutMe: null,\r\n        contacts: {\r\n            facebook: null,\r\n            website: null,\r\n            vk: null,\r\n            twitter: null,\r\n            instagram: null,\r\n            youtube: null,\r\n            github: null,\r\n            mainLink: null\r\n        },\r\n        lookingForAJob: null,\r\n        lookingForAJobDescription: null,\r\n        fullName: null,\r\n        userId: null,\r\n        photos: {\r\n            small: null,\r\n            large: null\r\n        }\r\n    }\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PROFILE_USER:\r\n            return {\r\n                ...state,\r\n                userData: action.userDataFromApi\r\n            }\r\n        case SET_PROFILE_PRELOADER:\r\n            return {\r\n                ...state,\r\n                profilePreloader: action.bool\r\n            }\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                userStatus: action.userStatusFromApi\r\n            }\r\n        case SET_IS_MY_PAGE:\r\n            return {\r\n                ...state,\r\n                isItMyPage: action.bool\r\n            }\r\n        case SET_PROFILE_PHOTO:\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    ...state.userData,\r\n                    photos: action.photos\r\n                }\r\n            }\r\n        case SET_NEW_USER_INFO:\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    ...state.userData,\r\n                    ...action.newUserInfo\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//ActionCreator\r\nexport const setProfileUserCardAC   = userDataFromApi   => ({type: SET_PROFILE_USER, userDataFromApi});\r\nexport const setProfilePreloaderAC  = bool              => ({type: SET_PROFILE_PRELOADER, bool});\r\nexport const setUserStatusAC        = userStatusFromApi => ({type: SET_USER_STATUS, userStatusFromApi});\r\nexport const setIsMyPageAC          = bool              => ({type: SET_IS_MY_PAGE, bool});\r\nexport const setProfilePhotoAC      = photos            => ({type: SET_PROFILE_PHOTO, photos});\r\nexport const setNewUserInfoAC       = newUserInfo       => ({type: SET_NEW_USER_INFO, newUserInfo});\r\n\r\n//ThunkCallback\r\nexport const getProfileUserCardThunkCallback = userId => async (dispatch, getState) => { //Получить userCard\r\n    dispatch(setProfilePreloaderAC(true)); //Включаем Preloader\r\n    let currentUserId = getState().authPage.data.id; //id хозяина страницы\r\n    if (userId === undefined || currentUserId === userId) { //если id не передан или равен текущему пользователю, тогда вставляем id пользователя хозяина\r\n        dispatch(setIsMyPageAC(true)); //устанавливаем что это моя страница\r\n        userId = currentUserId;\r\n    } else {\r\n        dispatch(setIsMyPageAC(false)); //устанавливаем что это не моя страница\r\n    }\r\n    let response = await profileApi.getProfileUserCard(userId); //Получаем userCard\r\n    await dispatch(getUserStatusThunkCallback(userId)) //Получаем UserStatus\r\n    dispatch(setProfilePreloaderAC(false)); //Выключаем Preloader\r\n    dispatch(setProfileUserCardAC(response.data))\r\n}\r\n\r\nexport const getUserStatusThunkCallback = userId => async (dispatch, getState) => { //Получить Status пользователя\r\n    if (!userId) userId = getState().authPage.data.id; //если id не передан, тогда вставляем id пользователя хозяина\r\n    let response = await profileApi.getUserStatus(userId);\r\n    dispatch(setUserStatusAC(response.data))\r\n}\r\n\r\nexport const changeUserStatusThunkCallback = newStatusString => async dispatch => { //Изменить статус\r\n    let response = await profileApi.changeUserStatus(newStatusString);\r\n    if(response.data.resultCode === 0) dispatch(setUserStatusAC(newStatusString));\r\n}\r\n\r\nexport const setNewProfilePhotoThunkCallback = photoFile => async dispatch => { //Изменить фото профиля\r\n    let formData = new FormData();\r\n    formData.append(\"image\", photoFile);\r\n    let response = await profileApi.setProfilePhoto(formData);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setProfilePhotoAC(response.data.data.photos))\r\n    }\r\n}\r\n\r\nexport const setNewUserInfoThunkCallback = formData => async dispatch => { //Изменить информацию о пользователе\r\n     let {\r\n         lookingForAJob, lookingForAJobDescription, aboutMe: AboutMe, fullName,\r\n         contacts: {github, vk, facebook, instagram,\r\n             twitter, website, youtube, mainLink},\r\n\r\n     } = formData;\r\n\r\n     let dataForFetchServer = {\r\n         lookingForAJob, lookingForAJobDescription,\r\n         fullName, AboutMe,\r\n         contacts: {\r\n             github, vk, facebook, instagram, twitter, website, youtube, mainLink\r\n         }\r\n     };\r\n     let response = await profileApi.setUserInfo(dataForFetchServer);\r\n\r\n     if (response.data.resultCode === 0) {\r\n         dispatch(setNewUserInfoAC(dataForFetchServer))\r\n     }\r\n}\r\n\r\nexport default profileReducer;","import {usersApi} from \"../api/api\";\r\n\r\nconst SET_USERS_DATA                    = \"social-app/users-reducer/SET_USERS_DATA\";\r\nconst SET_ANOTHER_PAGE                  = \"social-app/users-reducer/SET_ANOTHER_PAGE\";\r\nconst SET_USERS_PAGE_PRELOADER          = \"social-app/users-reducer/SET_USERS_PAGE_PRELOADER\";\r\nconst SET_FOLLOW_ON_USER_STATE          = \"social-app/users-reducer/SET_FOLLOW_ON_USER_STATE\";\r\nconst TOGGLE_USER_TO_STACK_SUBSCRIBE    = \"social-app/users-reducer/TOGGLE_USER_TO_STACK_SUBSCRIBE\";\r\nconst SET_TERM_VALUE                    = \"social-app/users-reducer/SET_TERM_VALUE\";\r\nconst SET_FRIEND_FILTER                 = \"social-app/users-reducer/SET_FRIEND_FILTER\";\r\nconst SET_DEFAULT_SETTINGS                 = \"social-app/users-reducer/SET_DEFAULT_SETTINGS\";\r\n\r\nlet initialState = {\r\n    count: 5,                          //Кол-во пользователей на странице\r\n    page: 1,                            //Текущая страница\r\n    term: \"\",                           //Имя для поиска\r\n    friend: \"\",                         //если true ищем только друзей, false всех кроме друзей, emty ищем всех\r\n    items: [],                          //Массив пользователей\r\n    totalCount: 4697,                   //Всего пользователей,\r\n    usersPagePreloder: true,\r\n    usersInProcessOfSubscribing: [],    //Пользователи на которых идёт подписка\r\n    error: null\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.dataFromApi\r\n            }\r\n        case SET_ANOTHER_PAGE:\r\n            return {\r\n                ...state,\r\n                page: action.newPageNumber\r\n            }\r\n        case SET_USERS_PAGE_PRELOADER:\r\n            return {\r\n                ...state,\r\n                usersPagePreloder: action.bool\r\n            }\r\n        case SET_FOLLOW_ON_USER_STATE:\r\n            return {\r\n                ...state,\r\n                items: state.items.map(oneUser => {\r\n\r\n                    if (oneUser.id === action.userId) {\r\n\r\n                        return {...oneUser, followed: !oneUser.followed}\r\n                    }\r\n                    return {...oneUser}\r\n                })\r\n            }\r\n        case TOGGLE_USER_TO_STACK_SUBSCRIBE:\r\n            return {\r\n                ...state,\r\n                usersInProcessOfSubscribing: action.bool\r\n                    ? [...state.usersInProcessOfSubscribing, action.userId]\r\n                    : state.usersInProcessOfSubscribing.filter(u => u !== action.userId)\r\n            }\r\n        case SET_TERM_VALUE:\r\n            return {\r\n                ...state,\r\n                term: action.string\r\n            }\r\n        case SET_FRIEND_FILTER:\r\n            return {\r\n                ...state,\r\n                friend: action.value\r\n            }\r\n        case SET_DEFAULT_SETTINGS:\r\n            return {\r\n                ...state,\r\n                page: initialState.page,\r\n                term: initialState.term,\r\n                friend: initialState.friend\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//ActionCreators\r\nexport const setUsersPageDataFromApiAC      = dataFromApi       => ({type: SET_USERS_DATA, dataFromApi});\r\nexport const setAnotherPageAC               = newPageNumber     => ({type: SET_ANOTHER_PAGE, newPageNumber});\r\nexport const setUsersPagePreloaderAC        = bool              => ({type: SET_USERS_PAGE_PRELOADER, bool});\r\nexport const setFollowOnUserStateAC         = userId            => ({type: SET_FOLLOW_ON_USER_STATE, userId});\r\nexport const toggleUserToStackSubscribeAC   = (userId, bool)    => ({type: TOGGLE_USER_TO_STACK_SUBSCRIBE, userId, bool});\r\nexport const setTermValueAC                 = string            => ({type: SET_TERM_VALUE, string}); //Поиск по имени\r\nexport const setFriendFilterAC              = value             => ({type: SET_FRIEND_FILTER, value}); //Поиск по фильтру\r\nexport const setDefaultSettingsAC           = ()                => ({type: SET_DEFAULT_SETTINGS}); //По умолчанию поиск\r\n//ThunkCallback\r\nexport const getUsersListThunkCallback = () => async (dispatch, getState) => {\r\n    dispatch(setUsersPagePreloaderAC(true)); //Пока запрос пошёл включаем прелоадер\r\n    let usersPage = {\r\n        count: getState().usersPage.count,\r\n        page: getState().usersPage.page,\r\n        term: getState().usersPage.term,\r\n        friend: getState().usersPage.friend\r\n    };\r\n    let {count, page, term, friend} = usersPage;\r\n    let response = await usersApi.getUsers(count, page, term, friend);\r\n    dispatch(setUsersPageDataFromApiAC(response.data));\r\n    dispatch(setUsersPagePreloaderAC(false)); //Запрос пришёл и скрыли прелоадер\r\n}\r\n\r\nexport const goToAnotherPageThunkCallback = newPageNumber => async dispatch => {\r\n    dispatch(setAnotherPageAC(newPageNumber));\r\n    await dispatch(getUsersListThunkCallback());\r\n}\r\n\r\nexport const toggleFollowUserThunkCallback = (userId, followed) => async dispatch => {\r\n    dispatch(toggleUserToStackSubscribeAC(userId, true)); //Добавить пользователя в очередь на подписку\r\n    let response;\r\n    if (followed) response = await usersApi.unFollowOnUser(userId); //Отписка если подписаны\r\n    else response = await usersApi.followOnUser(userId); //Подписка если отписанны\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setFollowOnUserStateAC(userId));\r\n        dispatch(toggleUserToStackSubscribeAC(userId, false)); //Удалить пользователя из очереди на подписку\r\n    }\r\n}\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Sidebar_section__2S3cv\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.078ba709.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Header_section__31OMO\"};"],"sourceRoot":""}