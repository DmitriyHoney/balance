{"version":3,"sources":["utils/FormControls.js","utils/FormsControls.module.scss","utils/validators.js","components/Login/LoginForm/LoginForm.module.scss","components/Login/LoginForm/LoginForm.js","components/Login/Login.js","components/Login/LoginContainer.js"],"names":["createFormElement","Component","input","meta","props","hasError","touched","error","className","s","formControl","CustomInput","CustomTextarea","module","exports","required","value","undefined","LoginFormWithReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","component","type","validate","placeholder","remember","htmlFor","id","errorBlock","captchaUrl","src","alt","Login","formData","sendLoginFormData","LoginContainer","loginInTheSiteThunkCallback","this","isAuth","to","React","compose","connect","state","getAuthState","getCaptchaUrl"],"mappings":"qNAGaA,EAAoB,SAAAC,GAAS,OAAI,YAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCACnEC,EAAWF,EAAKG,SAAWH,EAAKI,MACpC,OACI,yBAAKC,UAAWC,IAAEC,YAAF,KAAuBL,EAAWI,IAAEF,MAAL,KAC3C,6BACI,kBAACN,EAAD,iBAAeC,EAAWE,KAE7BC,GAAY,8BAAOF,EAAKI,UAKxBI,EAAcX,EAAkB,SAChCY,EAAiBZ,EAAkB,a,oBCfhDa,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,+B,iCCD3E,kCAAO,IAAMC,EAAW,SAAAC,GAAK,OAAKA,GAA0B,kBAAVA,OAAqBC,EAAY,a,oBCCnFJ,EAAOC,QAAU,CAAC,WAAa,8BAA8B,SAAW,8B,kJCoCzDI,EAJcC,YACzB,CAACC,KAAM,SADkBD,EA3BX,SAAAf,GACd,OACI,0BAAMiB,SAAUjB,EAAMkB,cAClB,kBAACC,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAWd,IAAae,KAAK,OAAOC,SAAU,CAACZ,KAAWa,YAAa,UAC3F,kBAACL,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAWd,IAAae,KAAK,WAAWC,SAAU,CAACZ,KAAWa,YAAa,aAClG,yBAAKpB,UAAWC,IAAEoB,UACd,2BAAOC,QAAQ,cAAf,eACA,kBAACP,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAWd,IAAae,KAAK,WAAWE,YAAa,cAAeG,GAAI,gBAGrG,yCACC3B,EAAMG,OACD,yBAAKC,UAAWC,IAAEuB,YACX5B,EAAMG,OAGlBH,EAAM6B,YACC,oCACI,yBAAKC,IAAK9B,EAAM6B,WAAYE,IAAI,YAChC,kBAACZ,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWd,IAAae,KAAK,OAAOC,SAAU,CAACZ,KAAWa,YAAa,iBCNtGQ,EAfD,SAAAhC,GAKV,OACI,kBAAC,EAAD,CACI6B,WAAY7B,EAAM6B,WAClBZ,SAPW,SAAAgB,GACfjC,EAAMkC,kBAAkBD,O,uCCQ1BE,E,4MACFD,kBAAoB,SAACD,GACjB,EAAKjC,MAAMoC,4BAA4BH,I,uDAGvC,OAAII,KAAKrC,MAAMsC,OAAe,kBAAC,IAAD,CAAUC,GAAI,aAExC,kBAAC,EAAD,CACIV,WAAYQ,KAAKrC,MAAM6B,WACvBK,kBAAmBG,KAAKH,wB,GATXM,IAAM3C,WAepB4C,sBACXC,aAtBkB,SAAAC,GAAK,MAAK,CAC5BL,OAAQM,YAAaD,GACrBd,WAAYgB,YAAcF,MAoBD,CAACP,kCADfK,CAEbN","file":"static/js/6.738a6a65.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from \"./FormsControls.module.scss\";\r\n\r\nexport const createFormElement = Component => ({input, meta, ...props}) => {\r\n    let hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={s.formControl + ` ` + (hasError ? s.error : ``) }>\r\n            <div>\r\n                <Component {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const CustomInput = createFormElement(\"input\");\r\nexport const CustomTextarea = createFormElement(\"textarea\");","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2RQcO\",\"error\":\"FormsControls_error__2AXLL\"};","export const required = value => (value || typeof value === 'number' ? undefined : 'Required');\r\nexport const email = value =>\r\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n        ? 'Invalid email address'\r\n        : undefined;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorBlock\":\"LoginForm_errorBlock__3ipiY\",\"remember\":\"LoginForm_remember__bisL3\"};","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {CustomInput} from \"../../../utils/FormControls\";\r\nimport {required} from \"../../../utils/validators\";\r\nimport s from \"./LoginForm.module.scss\";\r\n\r\nconst LoginForm = props => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name=\"email\" component={CustomInput} type=\"text\" validate={[required]} placeholder={\"email\"}/>\r\n            <Field name=\"password\" component={CustomInput} type=\"password\" validate={[required]} placeholder={\"password\"}/>\r\n            <div className={s.remember}>\r\n                <label htmlFor=\"rememberMe\">Remember me</label>\r\n                <Field name=\"rememberMe\" component={CustomInput} type=\"checkbox\" placeholder={\"remember me\"} id={\"rememberMe\"}/>\r\n            </div>\r\n\r\n            <button>Login</button>\r\n            {props.error\r\n                &&<div className={s.errorBlock}>\r\n                        {props.error}\r\n                    </div>\r\n            }\r\n            {props.captchaUrl\r\n                &&  <>\r\n                        <img src={props.captchaUrl} alt=\"Capthca\"/>\r\n                        <Field name=\"captcha\" component={CustomInput} type=\"text\" validate={[required]} placeholder={\"captcha\"}/>\r\n                    </>\r\n            }\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nlet LoginFormWithReduxForm = reduxForm(\r\n    {form: \"login\"}\r\n)(LoginForm)\r\n\r\nexport default LoginFormWithReduxForm;","import React from \"react\";\r\nimport LoginFormWithReduxForm from \"./LoginForm/LoginForm\";\r\n\r\n\r\nconst Login = props => {\r\n    let handleSubmit = formData => {\r\n        props.sendLoginFormData(formData);\r\n    };\r\n\r\n    return(\r\n        <LoginFormWithReduxForm\r\n            captchaUrl={props.captchaUrl}\r\n            onSubmit={handleSubmit}\r\n        />\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Login;","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginInTheSiteThunkCallback} from \"../../reducers/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {getAuthState, getCaptchaUrl} from \"../../selectors/selectors\";\r\n\r\nlet mapStateToProps = state => ({\r\n    isAuth: getAuthState(state),\r\n    captchaUrl: getCaptchaUrl(state)\r\n});\r\n\r\n\r\nclass LoginContainer extends React.Component {\r\n    sendLoginFormData = (formData) => {\r\n        this.props.loginInTheSiteThunkCallback(formData);\r\n    }\r\n    render() {\r\n        if (this.props.isAuth) return <Redirect to={\"/profile\"}/>\r\n        return (\r\n            <Login\r\n                captchaUrl={this.props.captchaUrl}\r\n                sendLoginFormData={this.sendLoginFormData}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {loginInTheSiteThunkCallback})\r\n)(LoginContainer);"],"sourceRoot":""}